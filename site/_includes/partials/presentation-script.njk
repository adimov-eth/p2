<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('[data-presentation]').forEach((presentation) => {
      const slides = Array.from(presentation.querySelectorAll('.presentation-slide'));
      const dots = Array.from(presentation.querySelectorAll('.presentation-dot'));
      const progressBar = presentation.querySelector('.presentation-progress span');

      slides.forEach((slide) => {
        const backdrop = slide.dataset.backdrop;
        if (backdrop) {
          slide.style.setProperty('--presentation-backdrop', `url('${backdrop}')`);
        }
      });

      const updateState = (index) => {
        const clamped = Math.max(0, Math.min(index, slides.length - 1));
        slides[clamped].scrollIntoView({ behavior: 'smooth' });
      };

      dots.forEach((dot, index) => {
        dot.addEventListener('click', () => updateState(index));
      });

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const slideIndex = Number(entry.target.dataset.index);
            dots.forEach((dot, idx) => {
              const isActive = idx === slideIndex;
              dot.classList.toggle('is-active', isActive);
              dot.setAttribute('aria-selected', isActive ? 'true' : 'false');
            });
            if (progressBar) {
              progressBar.style.width = `${(slideIndex / Math.max(slides.length - 1, 1)) * 100}%`;
            }
            entry.target.classList.add('is-visible');
          }
        });
      }, { threshold: 0.6 });

      slides.forEach((slide) => observer.observe(slide));
    });
  });
</script>
